<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.4" />
  <meta name="TEMPLATEBASE" content="TIBCO Software Inc. Template 3.3.2" />
  <meta name="LASTUPDATED" content="10/22/02 12:42:10" />
  <title>tibrvEvent_CreateTimer()</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
var  WWHFrame = WWHGetWWHFrame("");

    var BookName = "TIBCO Rendezvous C Reference";
    var ChapterTitle = "Chapter&#160;4	 Events";
   // -->
  </script>
 </head>

 <body  onLoad="WWHUpdate();WWHFrame.WWHContentFrame.WWHPageNavFrame.WWHTitleFrame.location.reload();">


<a name="wp1030234"> </a><h2 class="pNewHTMLPage">
tibrvEvent_CreateTimer()
</h2>
<hr />
<a name="wp1030238"> </a><p class="pSyntaxType">
Function
</p>
<a name="wp1086986"> </a><h4 class="pHeading3">
Declaration
</h4>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
<a  href="rv_c_ref227.htm#wp1193732"><code class="cCode">tibrv_status</code></a> <code class="cCodeBold">tibrvEvent_CreateTimer</code>(<a name="wp1077457"> </a>
&#160;&#160;&#160;&#160;<a  href="rv_c_ref75.htm#wp1157970"><code class="cCode">tibrvEvent</code></a>*&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;event,<a name="wp1077459"> </a>
&#160;&#160;&#160;&#160;<a  href="rv_c_ref96.htm#wp1065939"><code class="cCode">tibrvQueue</code></a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;queue,<a name="wp1114123"> </a>
&#160;&#160;&#160;&#160;<a  href="rv_c_ref76.htm#wp1071267"><code class="cCode">tibrvEventCallback</code></a>&#160;&#160;&#160;&#160;&#160;callback,<a name="wp1114124"> </a>
&#160;&#160;&#160;&#160;<a  href="rv_c_ref224.htm#wp1128761"><code class="cCode">tibrv_f64</code></a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;interval,<a name="wp1114125"> </a>
&#160;&#160;&#160;&#160;const void*&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;closure);<a name="wp1077463"> </a>
</pre></div>
<a name="wp1087457"> </a><h4 class="pHeading3">
Purpose
</h4>
<a name="wp1030248"> </a><p class="pBody">
Start a timer.</p><div align="left">
<table border="1">
  <caption></caption>
  <tr bgcolor="#006DA9" align="center" valign="top">    <th><a name="wp1144131"> </a><div class="pCellHeading">
Parameter
</div>
</th>
    <th><a name="wp1144133"> </a><div class="pCellHeading">
Description
</div>
</th>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1144174"> </a><div class="pCellBody">
<code class="cCode">event</code>
</div>
</td>
    <td><a name="wp1144176"> </a><div class="pCellBody">
At each time interval, place this event on the event queue.
</div>
<a name="wp1144177"> </a><div class="pCellBody">
The program supplies a location, and the function stores the new event object in that location.
</div>
<a name="wp1144178"> </a><div class="pCellBody">
The event object remains valid until the program explicitly destroys it.
</div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1144180"> </a><div class="pCellBody">
<code class="cCode">queue</code>
</div>
</td>
    <td><a name="wp1144182"> </a><div class="pCellBody">
At each time interval, place the event on this event queue.
</div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1144184"> </a><div class="pCellBody">
<code class="cCode">callback</code>
</div>
</td>
    <td><a name="wp1144186"> </a><div class="pCellBody">
On dispatch, process the event with this callback function.
</div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1144188"> </a><div class="pCellBody">
<code class="cCode">interval</code>
</div>
</td>
    <td><a name="wp1144190"> </a><div class="pCellBody">
The timer triggers its callback function at this repeating interval (in seconds).
</div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1144192"> </a><div class="pCellBody">
<code class="cCode">closure</code>
</div>
</td>
    <td><a name="wp1144194"> </a><div class="pCellBody">
Store this closure data in the event object.
</div>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
<a name="wp1087920"> </a><h4 class="pHeading3">
Remarks
</h4>
<a name="wp1030250"> </a><p class="pBody">
All timers are repeating timers. To simulate a once-only timer, code the callback function to destroy the timer.
</p>
<a name="wp1041356"> </a><p class="pBody">
This function creates a timer event object, and <em class="cEmphasis">activates</em> the timer event&#151;that is, it requests notification from the operating system when the timer&#8217;s interval elapses. When the interval elapses, Rendezvous software places the event object on its event queue. Dispatch removes the event object from the queue, and runs the callback function to process the timer event. On dispatch Rendezvous software also determines whether the next interval has already elapsed, and requeues the timer event if appropriate. (To stop the cycle, destroy the event object; see <a  href="rv_c_ref81.htm#wp1030625"><code class="cCode">tibrvEvent_Destroy()</code> </a>.)
</p>
<a name="wp1197451"> </a><p class="pBody">
Notice that time waiting in the event queue until dispatch can increase the effective interval of the timer. It is the programmer&#8217;s responsibility to ensure timely dispatch of events.
</p>
<a name="wp1198842"> </a><p class="pBody">
<a  href="rv_c_ref80.htm#wp1069075">Figure&#160;10</a> illustrates a sequence of timer intervals. The number of elapsed timer intervals directly determines the number of event callbacks.
</p>
<a name="wp1198846"> </a><p class="pBody">
At any moment the timer object appears on the event queue at most once&#151;not several times as multiple copies. Nonetheless, Rendezvous software arranges for the appropriate number of timer event callbacks based the number of intervals that have elapsed since the timer became active or reset its interval.
</p>
<a name="wp1197936"> </a><p class="pBody">
Destroying or invalidating the timer object <em class="cEmphasis">immediately</em> halts the sequence of timer events. The timer object ceases to queue new events, and an event already in the queue does not result in a callback. (However, callback functions that are already running in other threads continue to completion.)
</p>
<a name="wp1198653"> </a><p class="pBody">
Resetting the timer interval <em class="cEmphasis">immediately</em> interrupts the sequence of timer events and begins a new sequence, counting the new interval from that moment. The reset operation is equivalent to destroying the timer and creating a new object in its place.
</p>
<a name="wp1069075"> </a><div class="pFigureTitle">
Figure&#160;10   Timer Activation and Dispatch</div><div align="center"><img src="images/rv_c_refa5.gif" height="307" width="528" border="0" hspace="0" vspace="0"/>
</div><div class="pFigureTitle">
</div>
<a name="wp1197286"> </a><h4 class="pHeading3">
Timer Granularity
</h4>
<a name="wp1068123"> </a><p class="pBody">
Express the timer interval (in seconds) as a 64-bit floating point number. This representation allows microsecond granularity for intervals for over 100 years. The actual granularity of intervals depends on hardware and operating system constraints.
</p>
<a name="wp1138541"> </a><h4 class="pHeading3">
Zero as Interval
</h4>
<a name="wp1138560"> </a><p class="pBody">
Many programmers traditionally implement user events as timers with interval zero. Instead, we recommend implementing user events as messages on the intra-process transport. For more information, see <a  href="javascript:WWHClickedPopup('a', 'rv_concepts76.htm#wp1029257');" onMouseOver="WWHShowPopup('a', 'rv_concepts76.htm#wp1029257', (document.all||document.getElementById||document.layers)?event:null);" onMouseOut="WWHHidePopup();">Intra-Process Transport and User Events</a> in <em class="cEmphasis">TIBCO Rendezvous Concepts</em>.
</p>
<a name="wp1088310"> </a><h4 class="pHeading3">
See Also
</h4>
<a name="wp1197951"> </a><p class="pBody">
<a  href="rv_c_ref81.htm#wp1030625"><code class="cCode">tibrvEvent_Destroy()</code> </a>
</p>
<a name="wp1133582"> </a><p class="pBody">
<a  href="rv_c_ref90.htm#wp1075442"><code class="cCode">tibrvEvent_ResetTimerInterval()</code> </a>
</p>
<a name="wp1197946"> </a><p class="pBody">
<a  href="javascript:WWHClickedPopup('a', 'rv_concepts67.htm#wp1024765');" onMouseOver="WWHShowPopup('a', 'rv_concepts67.htm#wp1024765', (document.all||document.getElementById||document.layers)?event:null);" onMouseOut="WWHHidePopup();">Timer Event Semantics</a> in <em class="cEmphasis">TIBCO Rendezvous Concepts</em>
</p>


 <hr />


    <table align="right" border="0" cellspacing="0" cellpadding="0">
      <tr>
        <td align="right">
        <span style="font-size: 10px">
TIBCO Rendezvous C Reference <br />
          
Software Release 7.1,  
October 2002<br />
        <em>Copyright &#169; TIBCO Software Inc. All rights reserved</em><br />
        <a href="http://www.tibco.com" target="_top">www.tibco.com</a><br />
        </span>
        </td>
      </tr>
    </table>


<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 </body>
</html>
