<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.4" />
  <meta name="TEMPLATEBASE" content="TIBCO Software Inc. Template 3.3.2" />
  <meta name="LASTUPDATED" content="10/22/02 12:56:24" />
  <title>TibrvMsg::getField()</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
var  WWHFrame = WWHGetWWHFrame("");

    var BookName = "TIBCO Rendezvous C++ Reference";
    var ChapterTitle = "Chapter&#160;4	 Data";
   // -->
  </script>
 </head>

 <body  onLoad="WWHUpdate();WWHFrame.WWHContentFrame.WWHPageNavFrame.WWHTitleFrame.location.reload();">


<a name="wp1122057"> </a><h2 class="pNewHTMLPage">
TibrvMsg::getField()
</h2>
<hr />
<a name="wp1122058"> </a><p class="pSyntaxType">
Method
</p>
<a name="wp1122071"> </a><h4 class="pHeading3">
Declaration
</h4>
<div class="pPreformattedRelative"><pre class="pPreformattedRelative">
<a  href="rv_cpp_ref272.htm#wp1156714"><code class="cCode">TibrvStatus</code></a> <code class="cCodeBold">getField</code>(<a name="wp1123037"> </a>
&#160;&#160;&#160;&#160;const char*&#160;&#160;&#160;&#160;&#160;&#160;&#160;fieldName,<a name="wp1123049"> </a>
&#160;&#160;&#160;&#160;<a  href="rv_cpp_ref76.htm#wp1028876"><code class="cCode">TibrvMsgField</code></a>&amp;&#160;&#160;&#160;&#160;field,<a name="wp1123057"> </a>
&#160;&#160;&#160;&#160;tibrv_u16&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fieldId=0);<a name="wp1123056"> </a>
</pre></div>
<a name="wp1122072"> </a><h4 class="pHeading3">
Purpose
</h4>
<a name="wp1122074"> </a><p class="pBody">
Get a specified field from a message.
</p>
<a name="wp1122075"> </a><h4 class="pHeading3">
Remarks
</h4>
<a name="wp1122076"> </a><p class="pBody">
Programs specify the field to retrieve using the <code class="cCode">fieldName</code> and <code class="cCode">fieldId</code> parameters. For details, see <a  href="rv_cpp_ref25.htm#wp1114359">Field Names and Field Identifiers</a>.
</p>
<a name="wp1122080"> </a><p class="pBody">
The method takes a snapshot of the field, and stores that information in the <code class="cCode">field</code> argument, overwriting the field object supplied as an argument.
</p>
<a name="wp1122081"> </a><p class="pBody">
The method copies scalar data into the program&#8217;s field object. Pointer data (such as strings, arrays, submessages, XML data, or opaque byte sequences) extracted from the field remain valid until the message is destroyed; that is, even removing the field or updating the field&#8217;s value does <em class="cEmphasis">not</em> invalidate pointer data.
</p>
<a name="wp1122082"> </a><p class="pBody">
Programs can use a related method to loop through all the fields of a message. To retrieve each field by its integer index number, see <a  href="rv_cpp_ref54.htm#wp1159551"><code class="cCode">TibrvMsg::getFieldByIndex()</code> </a>.</p><div align="left">
<table border="1">
  <caption></caption>
  <tr bgcolor="#006DA9" align="center" valign="top">    <th><a name="wp1122095"> </a><div class="pCellHeading">
Parameter
</div>
</th>
    <th><a name="wp1122097"> </a><div class="pCellHeading">
Description
</div>
</th>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1122103"> </a><div class="pCellBody">
<code class="cCode">fieldName</code>
</div>
</td>
    <td><a name="wp1122105"> </a><div class="pCellBody">
Get a field with this name.
</div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1122107"> </a><div class="pCellBody">
<code class="cCode">field</code>
</div>
</td>
    <td><a name="wp1122112"> </a><div class="pCellBody">
The program supplies a <a  href="rv_cpp_ref76.htm#wp1028876"><code class="cCode">TibrvMsgField</code></a> object; the method overwrites the contents of the object with a snapshot of the information from the message field.
</div>
</td>
</tr>
  <tr align="left" valign="top">    <td><a name="wp1122114"> </a><div class="pCellBody">
<code class="cCode">fieldId</code>
</div>
</td>
    <td><a name="wp1122116"> </a><div class="pCellBody">
Get the field with this identifier. Zero is a special value that signifies no field identifier. All non-zero field identifiers must be unique within each message.
</div>
</td>
</tr>
</table>
</div>
<p class="pBody">
</p>
<a name="wp1122118"> </a><h4 class="pHeading3">
Field Search Algorithm
</h4>
<a name="wp1122119"> </a><p class="pBody">
This method, and related methods that <em class="cEmphasis">get</em> message fields, all use this algorithm to find a field within a message, as specified by a field identifier and a field name.
</p>
<div class="pSmartList1"><ol type="1">
<a name="wp1122121"> </a><div class="pSmartList1"><li value="1">If the identifier is zero, skip to step 3.</li></div>

<a name="wp1122122"> </a><p class="pBodyRelative">
If the program supplied a <em class="cEmphasis">non-zero</em> field identifier, then search for the field with that identifier.
</p>
<a name="wp1122123"> </a><p class="pBodyRelative">
If the search succeeds, return the field.
</p>
<a name="wp1122124"> </a><p class="pBodyRelative">
On failure, continue to step 2. 
</p>
<a name="wp1122125"> </a><div class="pSmartList1"><li value="2">If the identifier search (in step 1) fails, and the program supplied a non-<code class="cCode">NULL</code> field name, then search for a field with that name.</li></div>

<a name="wp1122126"> </a><p class="pBodyRelative">
If the name search succeeds, and the identifier in the field is <code class="cCode">NULL</code>, return the field.
</p>
<a name="wp1122127"> </a><p class="pBodyRelative">
If the name search succeeds, but the actual identifier in the field is non-<code class="cCode">NULL</code> (so it does not match the identifier supplied) then return the status code <a  href="rv_cpp_ref272.htm#wp1231443"><code class="cCode">TIBRV_ID_CONFLICT</code></a>.
</p>
<a name="wp1122131"> </a><p class="pBodyRelative">
If the name search fails, or if the program supplied <code class="cCode">NULL</code> as the field name, return the status code <a  href="rv_cpp_ref272.htm#wp1231433"><code class="cCode">TIBRV_NOT_FOUND</code></a>.
</p>
<a name="wp1122135"> </a><div class="pSmartList1"><li value="3">When the program supplied <em class="cEmphasis">zero</em> as the identifier, search for a field with the specified name&#151;even if that name is <code class="cCode">NULL</code>.</li></div>

<a name="wp1122137"> </a><p class="pBodyRelative">
If the search succeeds, return the field.
</p>
<a name="wp1122141"> </a><p class="pBodyRelative">
On failure, return the status code <a  href="rv_cpp_ref272.htm#wp1231433"><code class="cCode">TIBRV_NOT_FOUND</code></a>.
</p>
</ol></div>

<a name="wp1122142"> </a><p class="pBody">
If a message contains several fields with the same name, searching by name finds the first instance of the field with that name.
</p>
<a name="wp1122143"> </a><h4 class="pHeading3">
Extracting Fields from a Nested Message
</h4>
<a name="wp1122147"> </a><p class="pBody">
Earlier releases of Rendezvous software allowed programs to get fields from a nested submessage by concatenating field names. Starting with release 6, Rendezvous software no longer supports this special case convenience. Instead, programs must separately extract the nested submessage using <code class="cCode">TibrvMsg::getMsg()</code>, and then get the desired fields from the submessage.
</p>
<a name="wp1122151"> </a><h4 class="pHeading3">
Convenience Methods
</h4>
<a name="wp1122152"> </a><p class="pBody">
In most situations, we recommend using type-specific convenience methods instead of this general method. Type-specific methods yield these advantages when extracting fields:
</p>
<div class="pSmartList1"><ul>
<a name="wp1122153"> </a><div class="pSmartList1"><li >Code readability.</li></div>

<a name="wp1122154"> </a><div class="pSmartList1"><li >Type checking.</li></div>

<a name="wp1122155"> </a><div class="pSmartList1"><li >Automatic type conversion.</li></div>

</ul></div>

<a name="wp1122157"> </a><p class="pBody">
However, we do recommend the general method in two specific situations:
</p>
<div class="pSmartList1"><ul>
<a name="wp1122158"> </a><div class="pSmartList1"><li >No convenience method exists.</li></div>

<a name="wp1122159"> </a><div class="pSmartList1"><li >The program must extract the data exactly as it appears in the message, without automatic type conversion. (Convenience methods always convert extracted data to a specific type.)</li></div>

</ul></div>

<a name="wp1122161"> </a><p class="pBody">
These categories of type-specific convenience methods find a field and get its data:
</p>
<div class="pSmartList1"><ul>
<a name="wp1122165"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref47.htm#wp1122213">Get Scalar</a>.</li></div>

<a name="wp1122169"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref48.htm#wp1122382">Get Array</a>.</li></div>

<a name="wp1122173"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref49.htm#wp1122536">Get Nested Message</a>.</li></div>

<a name="wp1122177"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref50.htm#wp1159535">Get String</a>.</li></div>

<a name="wp1165511"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref51.htm#wp1122684">Get Opaque Byte Sequence</a>.</li></div>

<a name="wp1122181"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref52.htm#wp1165417">Get XML Byte Sequence</a>.</li></div>

<a name="wp1122185"> </a><div class="pSmartList1"><li ><a  href="rv_cpp_ref53.htm#wp1122758">Get DateTime</a>.</li></div>

</ul></div>

<a name="wp1122198"> </a><h4 class="pHeading3">
See Also
</h4>
<a name="wp1122202"> </a><p class="pBody">
<a  href="rv_cpp_ref25.htm#wp1114359">Field Names and Field Identifiers</a>
</p>
<a name="wp1122206"> </a><p class="pBody">
<a  href="rv_cpp_ref47.htm#wp1122213">Get Scalar</a>
</p>
<a name="wp1122210"> </a><p class="pBody">
<a  href="rv_cpp_ref76.htm#wp1028876"><code class="cCode">TibrvMsgField</code> </a>
</p>


 <hr />


    <table align="right" border="0" cellspacing="0" cellpadding="0">
      <tr>
        <td align="right">
        <span style="font-size: 10px">
TIBCO Rendezvous C++ Reference <br />
          
Software Release 7.1,  
October 2002<br />
        <em>Copyright &#169; TIBCO Software Inc. All rights reserved</em><br />
        <a href="http://www.tibco.com" target="_top">www.tibco.com</a><br />
        </span>
        </td>
      </tr>
    </table>


<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 </body>
</html>
