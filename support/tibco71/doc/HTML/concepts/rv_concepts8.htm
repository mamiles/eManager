<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="GENERATOR" content="Quadralay WebWorks Publisher Professional Edition 7.0.4" />
  <meta name="TEMPLATEBASE" content="TIBCO Software Inc. Template 3.3.2" />
  <meta name="LASTUPDATED" content="10/22/02 12:17:14" />
  <title>Developing Distributed Systems</title>
  <link rel="StyleSheet" href="document.css" type="text/css" />
  <link rel="StyleSheet" href="catalog.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/context.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/towwhdir.js"></script>
  <script type="text/javascript" language="JavaScript1.2" src="wwhdata/common/wwhpagef.js"></script>

  <script type="text/javascript" language="JavaScript1.2">
   <!--
    // Set reference to top level help frame
    //
var  WWHFrame = WWHGetWWHFrame("");

    var BookName = "TIBCO Rendezvous Concepts";
    var ChapterTitle = "Chapter&#160;1	 Product Overview";
   // -->
  </script>
 </head>

 <body  onLoad="WWHUpdate();WWHFrame.WWHContentFrame.WWHPageNavFrame.WWHTitleFrame.location.reload();">


<a name="wp1019461"> </a><h2 class="pNewHTMLPage">
Developing Distributed Systems
</h2>
<hr />
<a name="wp1019465"> </a><p class="pBody">
You can use the Rendezvous libraries with any popular software development methodology. Add these steps to the development process:
</p>
<div class="pSmartList1"><ul>
<a name="wp1019466"> </a><div class="pSmartList1"><li >Identify information producers and consumers during the analysis phase. Consider whether the information flow is best characterized as request/reply or as publish/subscribe (or both). Use this analysis to guide architectural design.</li></div>

<a name="wp1019467"> </a><p class="pBodyRelative">
For example, if your program behaves as a request/reply application, you can divide it into client and server components. If your program behaves as a publish/subscribe application, you can divide it into sending components and listening components. In some cases programs communicate in both modes&#151;request/reply and publish/subscribe.
</p>
<a name="wp1019468"> </a><div class="pSmartList1"><li >Identify the kinds of information that components exchange, the events that generate the information, and the information that triggers other events. Use this analysis to establish subject naming conventions and to design the content of data messages.</li></div>

<a name="wp1019472"> </a><div class="pSmartList1"><li >Write your Rendezvous programs in one of the supported languages, using Rendezvous API calls as appropriate.</li></div>

<a name="wp1019479"> </a><div class="pSmartList1"><li >Compile with the appropriate Rendezvous header files. Link your program code with the Rendezvous library. Link additional libraries for extended functionality. For details, see the Programmer&#8217;s Checklist section in each programming language reference manual.</li></div>

</ul></div>


 <hr />


    <table align="right" border="0" cellspacing="0" cellpadding="0">
      <tr>
        <td align="right">
        <span style="font-size: 10px">
TIBCO Rendezvous Concepts <br />
          
Software Release 7.1,  
October 2002<br />
        <em>Copyright &#169; TIBCO Software Inc. All rights reserved</em><br />
        <a href="http://www.tibco.com" target="_top">www.tibco.com</a><br />
        </span>
        </td>
      </tr>
    </table>


<script type="text/javascript" language="JavaScript1.2">
   <!--
    document.write(WWHRelatedTopicsDivTag() + WWHPopupDivTag());
   // -->
  </script>

 </body>
</html>
